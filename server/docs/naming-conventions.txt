
Naming Conventions

- constants: UPPER_SNAKE_CASE

- functions, constructors: UpperCamelCase
  - first upper is important for naming functions like reserved words, example: Delete / delete;
  - given that any function can be a constructor, it's more uniform to use UpperCamelCase for both.

- scalars, objects: lowerCamelCase
  - first lower is important for differentiating functions, constructors from scalars / objects;
  - given that object's properties can have any type, it makes sense to stick to the same convention.


*Finder <- suffix for strings that are the source of a regular expression.

- permissions
  - roles: UpperCamelCase
  - items: lowerCamelCase


- self is the object to be exported from a module
- that is the object to refer to from a function declared inside a method

